name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [published]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Run type checking
      run: npm run typecheck
      
    - name: Run tests
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
    - name: Build project
      run: npm run build
      
    - name: Test build output
      run: |
        test -f dist/usertune.js
        test -f dist/usertune.esm.js
        test -f dist/usertune.browser.js
        test -d dist/types

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Verify build output
      run: |
        test -f dist/usertune.js
        test -f dist/usertune.esm.js
        test -f dist/usertune.browser.js
        test -d dist/types
        
    - name: Update package version
      run: |
        # Extract version from release tag (remove 'v' prefix if present)
        VERSION=${GITHUB_REF#refs/tags/}
        VERSION=${VERSION#v}
        npm version $VERSION --no-git-tag-version
        
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release Assets
      run: |
        npm pack
        mv *.tgz usertune.js-${{ github.ref_name }}.tgz
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./usertune.js-${{ github.ref_name }}.tgz
        asset_name: usertune.js-${{ github.ref_name }}.tgz
        asset_content_type: application/gzip 